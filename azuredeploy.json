{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for the DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "xServerVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "VM Size for xServer instances"
      }
    },
    "webServerVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "VM Size for WebServer"
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "dnsNamePrefix": "[parameters('dnsNamePrefix')]",
    "imageOffer": "WindowsServer",
    "OSDiskName": "osdiskforwindowssimple",
    "dscConfigurationFunction": "SunDevWebServerConf.ps1\\SunDevWebServerConf",
    "dscModulesUrl": "SunDevWebServerConf.ps1\\SunDevWebServerConf",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[concat(variables('dnsNamePrefix'),'-subnet')]",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "vmStorageAccountContainerName": "vhds",
    "publicIPAddressType": "Dynamic",
    "webServerExtensionName": "[concat(variables('dnsNamePrefix'),'-wsext')]",
    "webServerName": "[concat(variables('dnsNamePrefix'),'-web')]",
    "webServerSize": "[parameters('webServerVMSize')]",
    "webServerNicName": "[concat(variables('dnsNamePrefix'),'-wsnic')]",
    "webServerNsgName": "[concat(variables('dnsNamePrefix'),'-wsnsg')]",
    "publicIPAddressNameWebServer": "[concat(variables('dnsNamePrefix'),'-wspip')]",
    "xServerName": "[concat(variables('dnsNamePrefix'),'-xserver')]",
    "xServerSize": "[parameters('xServerVMSize')]",
    "xServerNicName": "[concat(variables('dnsNamePrefix'),'-xsnic')]",
    "xServerNsgName": "[concat(variables('dnsNamePrefix'),'-xsnsg')]",
    "publicIPAddressNameXServer": "[concat(variables('dnsNamePrefix'),'-xspip')]",
    "virtualNetworkName": "[concat(variables('dnsNamePrefix'),'-vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',concat(variables('dnsNamePrefix'),'-vnet'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"

  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressNameWebServer')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "publicIPAddressWebServer"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('webServerName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressNameXServer')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "publicIPAddressXServer"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('xServerName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('webServerNicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "webServerNic"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressNameWebServer'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig-ws",
            "properties": {
              "privateIPAddress": "10.0.0.7",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressNameWebServer'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('webServerNsgName'))]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('xServerNicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "xServerNic"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressNameXServer'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig-xs",
            "properties": {
              "privateIPAddress": "10.0.0.5",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressNameXServer'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('xServerNsgName'))]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('webServerNsgName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "webServerNsg"
      },
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "https",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('xServerNsgName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "xServerNsg"
      },
      "properties": {
        "securityRules": [
          {
            "name": "xm",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "50010",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            }
          },
          {
            "name": "xl",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "50020",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            }
          },
          {
            "name": "xr",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "50030",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1300,
              "direction": "Inbound"
            }
          },
          {
            "name": "xt",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "50090",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1900,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1800,
              "direction": "Inbound"
            }
          },
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]

      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('webServerName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "webServerVM"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('webServerNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('webServerVMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('webServerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            
          }

        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('webServerName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('webServerNicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('xServerName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "xServerVM"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('xServerNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('xServerVMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('xServerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('xServerName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('xServerNicName'))]"
            }
          ]
        }
      }
    }
  ]
}
